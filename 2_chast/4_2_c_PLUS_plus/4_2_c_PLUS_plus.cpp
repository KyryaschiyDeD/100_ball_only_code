#include <iostream>
#include <fstream>
using namespace std;

int main()
{
	ifstream fil("1.txt"); //Создаём объект класса ifstream и связываем его с файлом. (Проще говоря открываем файл для чтения)
	int s, n; 
	fil >> s; // Считываем размер свободного места
	fil >> n; // Считываем кол-во пользователей 
	int mas[3000]; // Создаём масив на 1000 эл-тов, т.к. это максимум в наших условиях (в данном случае 3К, т.к. я использовал большой файл для проверки программы)
	for (int i = 0; i < n; i++) 
	{
		fil >> mas[i]; // Циклом считываем все значения объёмов файлов каждого пользователя
	}
	for (int i = 0; i < n; i++) // Объявляем циклы для сортировки 
		for (int j = i+1; j < n; j++) // Сортируем массив по возрастанию методом "пузырька" 
			//P.S., метод пузырька по сути самый простой для понимая ребёнком, поэтому его и использую.
		{
			if (mas[i] > mas[j]) // Если первый эл-т больше второго (и т.д.), то меняем их местами 
			{
				int t = mas[i]; // Сохраняем значние 1
				mas[i] = mas[j]; // заменяем значение 1, значением 2
				mas[j] = t; // Вместо значения 2 записываем значение 1.
			}
		}
	int sum = 0, max = 1;  // Обнуляем сумму и Берём максимальное число пользователей за 1.
	for (int i = 0; i < n; i++) // Идём по всему массиву
	{
		if (sum + mas[i] <= s) // Если сумма + значение объёма памяти у пользователя меньше или равно кол-ву свободного места, то 
		{
			sum += mas[i]; // Заносим новую сумму, которая удовлетворяет нашим условиям
			max = i; // Сохраняем индекс пользователя с максимальной суммой, т.к. массив отсортирован по возрастанию, то это значение i
			// Этоже значение будет являться кол-вом пользователей, которых мы могём сохраняить
		}
	}

	int t = mas[max]; // Сохраняем максимальный размер имеющегося файла в переменную t
	for (int i = max; i < n; i++)  // Бежим по массиву от последнего максимального эл-та
	{
		if ((sum - t + mas[i]) <= s)  // Если (наша сумма - максимальный размер файла) + размер файла пользователя, меньше или равно s, то
		{
			sum = sum - t + mas[i]; // Сохраняем новую сумму, этот цикл необходим для того, чтобы вычислить максимальный размер файла, который мы способны сохранить
			t = mas[i]; //Сохраняем зн-ние максимального размера файла
		}
	}

	max++; // Увеличиваем кол-во пользователей на 1, т.к. мы брали его по индексу массива, а индекс массива у нас всегда начинался с 0.
	cout << max << " " << t; // Выводим соответственно значения, мах - максимальное кол-во пользователей, t - максиммальный размер файла.
}
