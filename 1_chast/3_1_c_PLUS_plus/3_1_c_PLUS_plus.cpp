

#include <iostream>
#include <vector>
using namespace std;

int main()
{
    int n;
    n = 15; // Вводить n с клавиатуры в данным случае не корректно, т.к. нам дан размер массива
    vector <int> mas(n); // Использование вектора не обязательно (а может быть и является ошибкой, т.к. нам уже дана размерность массива, см подробнее в файле readme.txt
    // Также в задании сказано, что дан простой одномерный массив, не векторный, не динамический, а одномерный массив, 
    // состоящий из 15-ти элементов, так что лучше в данной задачи не использовать вектор. (Пример кода без вектора есть в readme.txt
    for (int i = 0; i < n; i++) // По массиву принято идти с 0-го элемента, поэтому i в данном случае мы присваиваем 0
    {
        cin >> mas[i];
    }
    for (int i = 0; i < 2; i++) // Т.к. мы идём по массиву с 0-го элекмента, то эл-т под индексом 2 - будет считаться уже третьем, поэтому мы тут ставим <, вместо <=
    {
        cout << mas[i] << " ";
    }
    for (int i = 8; i >= 2; i--) // Аналогично предыдущему комментарию, эл-т под индексом 8 будет по факту 9-м, а под индексом 2 - третьим, а значит   i = 8; i >= 2;
    {
        cout << mas[i] << " "; 
    }
    for (int i = 9; i < n; i++) // Аналогично всему вышесказанному, эл-т под индексом 9 будет по факту 10-м, поэтому с него и начинаем вывод,
        // Ну и т.к. отчёт идёт с 0, то не "i <= n", а "i < n"
    {
        cout << mas[i] << " ";
    }
    return 0;
}

// Также, задание сформулированно чётко, что необходимо ПЕРЕСТАВИТЬ в обратном парядке эл-ты, 
// Конечно да, не уточняется, что переставить именно в массиве... Но также и не сказано, что 
// их можно просто вывести хитро-выебанным способом (с учениками мата не будет))
// Я бы в данном случае всё таки переставил бы эл-ты массива, а затем просто вывел массив.